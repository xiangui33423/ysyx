$version Generated by VerilatedVcd $end
$date Wed Oct 11 06:14:44 2023 $end
$timescale 1s $end

 $scope module TOP $end
  $var wire  8 K! ascii1 [7:0] $end
  $var wire  8 L! ascii2 [7:0] $end
  $var wire  1 E! clk $end
  $var wire  8 I! counter1 [7:0] $end
  $var wire  8 J! counter2 [7:0] $end
  $var wire  8 M! key1 [7:0] $end
  $var wire  8 N! key2 [7:0] $end
  $var wire  1 G! ps2_clk $end
  $var wire  1 H! ps2_data $end
  $var wire  1 F! rst_n $end
  $scope module top $end
   $var wire  8 K! ascii1 [7:0] $end
   $var wire  8 L! ascii2 [7:0] $end
   $var wire  1 E! clk $end
   $var wire  8 I! counter1 [7:0] $end
   $var wire  8 J! counter2 [7:0] $end
   $var wire  8 :! data [7:0] $end
   $var wire  1 ;! en $end
   $var wire  8 M! key1 [7:0] $end
   $var wire  8 N! key2 [7:0] $end
   $var wire  1 G! ps2_clk $end
   $var wire  1 H! ps2_data $end
   $var wire  1 F! rst_n $end
   $scope module u_keyboard $end
    $var wire 10 <! buffer [9:0] $end
    $var wire  1 E! clk $end
    $var wire  4 =! count [3:0] $end
    $var wire  8 :! data [7:0] $end
    $var wire  1 ;! en $end
    $var wire  8 :! out [7:0] $end
    $var wire  1 G! ps2_clk $end
    $var wire  3 >! ps2_clk_sync [2:0] $end
    $var wire  1 H! ps2_data $end
    $var wire  1 P! ready $end
    $var wire  1 F! rst_n $end
    $var wire  1 ?! sampling $end
   $upscope $end
   $scope module u_produce $end
    $var wire  5 A! addr1 [4:0] $end
    $var wire  5 B! addr2 [4:0] $end
    $var wire  8 K! ascii1 [7:0] $end
    $var wire  8 L! ascii2 [7:0] $end
    $var wire  8 5! buffer [7:0] $end
    $var wire  1 E! clk $end
    $var wire  8 3! counter [7:0] $end
    $var wire  8 I! counter1 [7:0] $end
    $var wire  8 J! counter2 [7:0] $end
    $var wire  8 :! data [7:0] $end
    $var wire  1 ;! en $end
    $var wire  8 M! key1 [7:0] $end
    $var wire  8 N! key2 [7:0] $end
    $var wire  3 6! last_state [2:0] $end
    $var wire  1 F! rst_n $end
    $var wire  3 2! state [2:0] $end
    $var wire  8 4! tmp [7:0] $end
    $scope module u_ascii $end
     $var wire  8 U! addr [7:0] $end
     $var wire  5 C! addr1 [4:0] $end
     $var wire  5 D! addr2 [4:0] $end
     $var wire  8 9! buffer [7:0] $end
     $var wire  1 E! clk $end
     $var wire  8 :! data [7:0] $end
     $var wire 32 k i [31:0] $end
     $var wire  8 @! lut_out [7:0] $end
     $var wire  1 F! rst_n $end
     $var wire  8 M! seg1 [7:0] $end
     $var wire  8 N! seg2 [7:0] $end
     $var wire  8 4! tmp [7:0] $end
     $scope module u_rom1 $end
      $var wire  5 C! addr [4:0] $end
      $var wire  1 E! clk $end
      $var wire 32 } i [31:0] $end
      $var wire  8 l rom(0) [7:0] $end
      $var wire  8 m rom(1) [7:0] $end
      $var wire  8 v rom(10) [7:0] $end
      $var wire  8 w rom(11) [7:0] $end
      $var wire  8 x rom(12) [7:0] $end
      $var wire  8 y rom(13) [7:0] $end
      $var wire  8 z rom(14) [7:0] $end
      $var wire  8 { rom(15) [7:0] $end
      $var wire  8 | rom(16) [7:0] $end
      $var wire  8 n rom(2) [7:0] $end
      $var wire  8 o rom(3) [7:0] $end
      $var wire  8 p rom(4) [7:0] $end
      $var wire  8 q rom(5) [7:0] $end
      $var wire  8 r rom(6) [7:0] $end
      $var wire  8 s rom(7) [7:0] $end
      $var wire  8 t rom(8) [7:0] $end
      $var wire  8 u rom(9) [7:0] $end
      $var wire  1 F! rst_n $end
      $var wire  8 M! seg [7:0] $end
     $upscope $end
     $scope module u_rom2 $end
      $var wire  5 D! addr [4:0] $end
      $var wire  1 E! clk $end
      $var wire 32 1! i [31:0] $end
      $var wire  8 ~ rom(0) [7:0] $end
      $var wire  8 !! rom(1) [7:0] $end
      $var wire  8 *! rom(10) [7:0] $end
      $var wire  8 +! rom(11) [7:0] $end
      $var wire  8 ,! rom(12) [7:0] $end
      $var wire  8 -! rom(13) [7:0] $end
      $var wire  8 .! rom(14) [7:0] $end
      $var wire  8 /! rom(15) [7:0] $end
      $var wire  8 0! rom(16) [7:0] $end
      $var wire  8 "! rom(2) [7:0] $end
      $var wire  8 #! rom(3) [7:0] $end
      $var wire  8 $! rom(4) [7:0] $end
      $var wire  8 %! rom(5) [7:0] $end
      $var wire  8 &! rom(6) [7:0] $end
      $var wire  8 '! rom(7) [7:0] $end
      $var wire  8 (! rom(8) [7:0] $end
      $var wire  8 )! rom(9) [7:0] $end
      $var wire  1 F! rst_n $end
      $var wire  8 N! seg [7:0] $end
     $upscope $end
    $upscope $end
    $scope module u_fsm $end
     $var wire  3 Q! IDLE [2:0] $end
     $var wire  3 S! OFF [2:0] $end
     $var wire  3 R! ON [2:0] $end
     $var wire  3 T! WAIT [2:0] $end
     $var wire  1 E! clk $end
     $var wire  3 2! current_state [2:0] $end
     $var wire  8 :! data [7:0] $end
     $var wire  1 ;! en $end
     $var wire  3 O! next_state [2:0] $end
     $var wire  1 F! rst_n $end
     $var wire  3 2! state [2:0] $end
    $upscope $end
    $scope module u_rom_ascii1 $end
     $var wire  5 A! addr [4:0] $end
     $var wire  1 E! clk $end
     $var wire 32 X i [31:0] $end
     $var wire  8 G rom(0) [7:0] $end
     $var wire  8 H rom(1) [7:0] $end
     $var wire  8 Q rom(10) [7:0] $end
     $var wire  8 R rom(11) [7:0] $end
     $var wire  8 S rom(12) [7:0] $end
     $var wire  8 T rom(13) [7:0] $end
     $var wire  8 U rom(14) [7:0] $end
     $var wire  8 V rom(15) [7:0] $end
     $var wire  8 W rom(16) [7:0] $end
     $var wire  8 I rom(2) [7:0] $end
     $var wire  8 J rom(3) [7:0] $end
     $var wire  8 K rom(4) [7:0] $end
     $var wire  8 L rom(5) [7:0] $end
     $var wire  8 M rom(6) [7:0] $end
     $var wire  8 N rom(7) [7:0] $end
     $var wire  8 O rom(8) [7:0] $end
     $var wire  8 P rom(9) [7:0] $end
     $var wire  1 F! rst_n $end
     $var wire  8 K! seg [7:0] $end
    $upscope $end
    $scope module u_rom_ascii2 $end
     $var wire  5 B! addr [4:0] $end
     $var wire  1 E! clk $end
     $var wire 32 j i [31:0] $end
     $var wire  8 Y rom(0) [7:0] $end
     $var wire  8 Z rom(1) [7:0] $end
     $var wire  8 c rom(10) [7:0] $end
     $var wire  8 d rom(11) [7:0] $end
     $var wire  8 e rom(12) [7:0] $end
     $var wire  8 f rom(13) [7:0] $end
     $var wire  8 g rom(14) [7:0] $end
     $var wire  8 h rom(15) [7:0] $end
     $var wire  8 i rom(16) [7:0] $end
     $var wire  8 [ rom(2) [7:0] $end
     $var wire  8 \ rom(3) [7:0] $end
     $var wire  8 ] rom(4) [7:0] $end
     $var wire  8 ^ rom(5) [7:0] $end
     $var wire  8 _ rom(6) [7:0] $end
     $var wire  8 ` rom(7) [7:0] $end
     $var wire  8 a rom(8) [7:0] $end
     $var wire  8 b rom(9) [7:0] $end
     $var wire  1 F! rst_n $end
     $var wire  8 L! seg [7:0] $end
    $upscope $end
    $scope module u_rom_counter1 $end
     $var wire  5 7! addr [4:0] $end
     $var wire  1 E! clk $end
     $var wire 32 4 i [31:0] $end
     $var wire  8 # rom(0) [7:0] $end
     $var wire  8 $ rom(1) [7:0] $end
     $var wire  8 - rom(10) [7:0] $end
     $var wire  8 . rom(11) [7:0] $end
     $var wire  8 / rom(12) [7:0] $end
     $var wire  8 0 rom(13) [7:0] $end
     $var wire  8 1 rom(14) [7:0] $end
     $var wire  8 2 rom(15) [7:0] $end
     $var wire  8 3 rom(16) [7:0] $end
     $var wire  8 % rom(2) [7:0] $end
     $var wire  8 & rom(3) [7:0] $end
     $var wire  8 ' rom(4) [7:0] $end
     $var wire  8 ( rom(5) [7:0] $end
     $var wire  8 ) rom(6) [7:0] $end
     $var wire  8 * rom(7) [7:0] $end
     $var wire  8 + rom(8) [7:0] $end
     $var wire  8 , rom(9) [7:0] $end
     $var wire  1 F! rst_n $end
     $var wire  8 I! seg [7:0] $end
    $upscope $end
    $scope module u_rom_counter2 $end
     $var wire  5 8! addr [4:0] $end
     $var wire  1 E! clk $end
     $var wire 32 F i [31:0] $end
     $var wire  8 5 rom(0) [7:0] $end
     $var wire  8 6 rom(1) [7:0] $end
     $var wire  8 ? rom(10) [7:0] $end
     $var wire  8 @ rom(11) [7:0] $end
     $var wire  8 A rom(12) [7:0] $end
     $var wire  8 B rom(13) [7:0] $end
     $var wire  8 C rom(14) [7:0] $end
     $var wire  8 D rom(15) [7:0] $end
     $var wire  8 E rom(16) [7:0] $end
     $var wire  8 7 rom(2) [7:0] $end
     $var wire  8 8 rom(3) [7:0] $end
     $var wire  8 9 rom(4) [7:0] $end
     $var wire  8 : rom(5) [7:0] $end
     $var wire  8 ; rom(6) [7:0] $end
     $var wire  8 < rom(7) [7:0] $end
     $var wire  8 = rom(8) [7:0] $end
     $var wire  8 > rom(9) [7:0] $end
     $var wire  1 F! rst_n $end
     $var wire  8 J! seg [7:0] $end
    $upscope $end
   $upscope $end
  $upscope $end
 $upscope $end
$enddefinitions $end


#1
b00000000 #
b00000000 $
b00000000 %
b00000000 &
b00000000 '
b00000000 (
b00000000 )
b00000000 *
b00000000 +
b00000000 ,
b00000000 -
b00000000 .
b00000000 /
b00000000 0
b00000000 1
b00000000 2
b00000000 3
b00000000000000000000000000000000 4
b00000000 5
b00000000 6
b00000000 7
b00000000 8
b00000000 9
b00000000 :
b00000000 ;
b00000000 <
b00000000 =
b00000000 >
b00000000 ?
b00000000 @
b00000000 A
b00000000 B
b00000000 C
b00000000 D
b00000000 E
b00000000000000000000000000000000 F
b00000000 G
b00000000 H
b00000000 I
b00000000 J
b00000000 K
b00000000 L
b00000000 M
b00000000 N
b00000000 O
b00000000 P
b00000000 Q
b00000000 R
b00000000 S
b00000000 T
b00000000 U
b00000000 V
b00000000 W
b00000000000000000000000000000000 X
b00000000 Y
b00000000 Z
b00000000 [
b00000000 \
b00000000 ]
b00000000 ^
b00000000 _
b00000000 `
b00000000 a
b00000000 b
b00000000 c
b00000000 d
b00000000 e
b00000000 f
b00000000 g
b00000000 h
b00000000 i
b00000000000000000000000000000000 j
b00000000000000000000000000100100 k
b00000000 l
b00000000 m
b00000000 n
b00000000 o
b00000000 p
b00000000 q
b00000000 r
b00000000 s
b00000000 t
b00000000 u
b00000000 v
b00000000 w
b00000000 x
b00000000 y
b00000000 z
b00000000 {
b00000000 |
b00000000000000000000000000000000 }
b00000000 ~
b00000000 !!
b00000000 "!
b00000000 #!
b00000000 $!
b00000000 %!
b00000000 &!
b00000000 '!
b00000000 (!
b00000000 )!
b00000000 *!
b00000000 +!
b00000000 ,!
b00000000 -!
b00000000 .!
b00000000 /!
b00000000 0!
b00000000000000000000000000000000 1!
b000 2!
b00000000 3!
b00000000 4!
b00000000 5!
b000 6!
b00000 7!
b00000 8!
b00000000 9!
b00000000 :!
0;!
b0000000000 <!
b0000 =!
b000 >!
0?!
b00000000 @!
b10000 A!
b10000 B!
b10000 C!
b10000 D!
0E!
0F!
1G!
1H!
b00000000 I!
b00000000 J!
b00000000 K!
b00000000 L!
b00000000 M!
b00000000 N!
b000 O!
0P!
b000 Q!
b001 R!
b010 S!
b100 T!
b00000000 U!
#2
b11111100 #
b01100000 $
b11011010 %
b11110010 &
b01100110 '
b10110110 (
b10111110 )
b11100000 *
b11111110 +
b11110110 ,
b11101110 -
b11111110 .
b10011100 /
b11111100 0
b10011110 1
b10001110 2
b11111100 5
b01100000 6
b11011010 7
b11110010 8
b01100110 9
b10110110 :
b10111110 ;
b11100000 <
b11111110 =
b11110110 >
b11101110 ?
b11111110 @
b10011100 A
b11111100 B
b10011110 C
b10001110 D
b11111100 G
b01100000 H
b11011010 I
b11110010 J
b01100110 K
b10110110 L
b10111110 M
b11100000 N
b11111110 O
b11110110 P
b11101110 Q
b11111110 R
b10011100 S
b11111100 T
b10011110 U
b10001110 V
b11111100 Y
b01100000 Z
b11011010 [
b11110010 \
b01100110 ]
b10110110 ^
b10111110 _
b11100000 `
b11111110 a
b11110110 b
b11101110 c
b11111110 d
b10011100 e
b11111100 f
b10011110 g
b10001110 h
b11111100 l
b01100000 m
b11011010 n
b11110010 o
b01100110 p
b10110110 q
b10111110 r
b11100000 s
b11111110 t
b11110110 u
b11101110 v
b11111110 w
b10011100 x
b11111100 y
b10011110 z
b10001110 {
b11111100 ~
b01100000 !!
b11011010 "!
b11110010 #!
b01100110 $!
b10110110 %!
b10111110 &!
b11100000 '!
b11111110 (!
b11110110 )!
b11101110 *!
b11111110 +!
b10011100 ,!
b11111100 -!
b10011110 .!
b10001110 /!
b001 >!
1E!
#3
0E!
#4
b011 >!
1E!
#5
0E!
#6
b111 >!
1E!
#7
0E!
#8
1E!
#9
0E!
#10
b00000000000000000000000000010000 4
b00000000000000000000000000010000 F
b00000000000000000000000000010000 X
b00000000000000000000000000010000 j
b00000000000000000000000000010000 }
b00000000000000000000000000010000 1!
1E!
1F!
b11111100 I!
b11111100 J!
#11
0E!
0H!
#12
1E!
#13
0E!
#14
1E!
#15
0E!
#16
1E!
#17
0E!
#18
1E!
#19
0E!
#20
1E!
#21
0E!
0G!
#22
b110 >!
1E!
#23
0E!
#24
b100 >!
1?!
1E!
#25
0E!
#26
b0001 =!
b001 >!
0?!
1E!
1G!
#27
0E!
#28
b011 >!
1E!
#29
0E!
#30
b111 >!
1E!
#31
0E!
0G!
1H!
#32
b110 >!
1E!
#33
0E!
#34
b100 >!
1?!
1E!
#35
0E!
#36
b0000000010 <!
b0010 =!
b001 >!
0?!
1E!
1G!
#37
0E!
#38
b011 >!
1E!
#39
0E!
#40
b111 >!
1E!
#41
0E!
0G!
0H!
#42
b110 >!
1E!
#43
0E!
#44
b100 >!
1?!
1E!
#45
0E!
#46
b0011 =!
b001 >!
0?!
1E!
1G!
#47
0E!
#48
b011 >!
1E!
#49
0E!
#50
b111 >!
1E!
#51
0E!
0G!
1H!
#52
b110 >!
1E!
#53
0E!
#54
b100 >!
1?!
1E!
#55
0E!
#56
b0000001010 <!
b0100 =!
b001 >!
0?!
1E!
1G!
#57
0E!
#58
b011 >!
1E!
#59
0E!
#60
b111 >!
1E!
#61
0E!
0G!
#62
b110 >!
1E!
#63
0E!
#64
b100 >!
1?!
1E!
#65
0E!
#66
b0000011010 <!
b0101 =!
b001 >!
0?!
1E!
1G!
#67
0E!
#68
b011 >!
1E!
#69
0E!
#70
b111 >!
1E!
#71
0E!
0G!
#72
b110 >!
1E!
#73
0E!
#74
b100 >!
1?!
1E!
#75
0E!
#76
b0000111010 <!
b0110 =!
b001 >!
0?!
1E!
1G!
#77
0E!
#78
b011 >!
1E!
#79
0E!
#80
b111 >!
1E!
#81
0E!
0G!
0H!
#82
b110 >!
1E!
#83
0E!
#84
b100 >!
1?!
1E!
#85
0E!
#86
b0111 =!
b001 >!
0?!
1E!
1G!
#87
0E!
#88
b011 >!
1E!
#89
0E!
#90
b111 >!
1E!
#91
0E!
0G!
#92
b110 >!
1E!
#93
0E!
#94
b100 >!
1?!
1E!
#95
0E!
#96
b1000 =!
b001 >!
0?!
1E!
1G!
#97
0E!
#98
b011 >!
1E!
#99
0E!
#100
b111 >!
1E!
#101
0E!
0G!
#102
b110 >!
1E!
#103
0E!
#104
b100 >!
1?!
1E!
#105
0E!
#106
b1001 =!
b001 >!
0?!
1E!
1G!
#107
0E!
#108
b011 >!
1E!
#109
0E!
#110
b111 >!
1E!
#111
0E!
0G!
1H!
#112
b110 >!
1E!
#113
0E!
#114
b100 >!
1?!
1E!
#115
0E!
#116
b1000111010 <!
b1010 =!
b001 >!
0?!
1E!
1G!
#117
0E!
#118
b011 >!
1E!
#119
0E!
#120
b111 >!
1E!
#121
0E!
0G!
#122
b110 >!
1E!
#123
0E!
#124
b100 >!
1?!
1E!
#125
0E!
#126
b00011101 :!
1;!
b0000 =!
b001 >!
0?!
b01010111 @!
b01101 A!
b00001 B!
b00111 C!
b00101 D!
1E!
1G!
b11111100 K!
b01100000 L!
b11100000 M!
b10110110 N!
b001 O!
#127
0E!
#128
b001 2!
b00011101 4!
0;!
b0000000000 <!
b011 >!
1E!
#129
0E!
#130
b00000001 3!
b00011101 5!
b001 6!
b00001 8!
b00011101 9!
b111 >!
1E!
b01100000 J!
#131
0E!
0G!
#132
b110 >!
1E!
#133
0E!
#134
b100 >!
1?!
1E!
#135
0E!
#136
b0000000001 <!
b0001 =!
b001 >!
0?!
1E!
1G!
#137
0E!
#138
b011 >!
1E!
#139
0E!
#140
b111 >!
1E!
#141
0E!
0G!
#142
b110 >!
1E!
#143
0E!
#144
b100 >!
1?!
1E!
#145
0E!
#146
b0000000011 <!
b0010 =!
b001 >!
0?!
1E!
1G!
#147
0E!
#148
b011 >!
1E!
#149
0E!
#150
b111 >!
1E!
#151
0E!
0G!
#152
b110 >!
1E!
#153
0E!
#154
b100 >!
1?!
1E!
#155
0E!
#156
b0000000111 <!
b0011 =!
b001 >!
0?!
1E!
1G!
#157
0E!
#158
b011 >!
1E!
#159
0E!
#160
b111 >!
1E!
#161
0E!
0G!
#162
b110 >!
1E!
#163
0E!
#164
b100 >!
1?!
1E!
#165
0E!
#166
b0000001111 <!
b0100 =!
b001 >!
0?!
1E!
1G!
#167
0E!
#168
b011 >!
1E!
#169
0E!
#170
b111 >!
1E!
#171
0E!
0G!
#172
b110 >!
1E!
#173
0E!
#174
b100 >!
1?!
1E!
#175
0E!
#176
b0000011111 <!
b0101 =!
b001 >!
0?!
1E!
1G!
#177
0E!
#178
b011 >!
1E!
#179
0E!
#180
b111 >!
1E!
#181
0E!
0G!
#182
b110 >!
1E!
#183
0E!
#184
b100 >!
1?!
1E!
#185
0E!
#186
b0000111111 <!
b0110 =!
b001 >!
0?!
1E!
1G!
#187
0E!
#188
b011 >!
1E!
#189
0E!
#190
b111 >!
1E!
#191
0E!
0G!
#192
b110 >!
1E!
#193
0E!
#194
b100 >!
1?!
1E!
#195
0E!
#196
b0001111111 <!
b0111 =!
b001 >!
0?!
1E!
1G!
#197
0E!
#198
b011 >!
1E!
#199
0E!
#200
b111 >!
1E!
#201
