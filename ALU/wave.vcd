$version Generated by VerilatedVcd $end
$date Thu Oct  5 23:28:13 2023 $end
$timescale 1s $end

 $scope module TOP $end
  $var wire  4 ' A [3:0] $end
  $var wire  4 ( B [3:0] $end
  $var wire  3 ) op [2:0] $end
  $var wire  4 * out [3:0] $end
  $scope module alu $end
   $var wire  4 ' A [3:0] $end
   $var wire  4 ( B [3:0] $end
   $var wire  4 & add [3:0] $end
   $var wire  1 , carry $end
   $var wire  3 ) op [2:0] $end
   $var wire  4 * out [3:0] $end
   $var wire  1 + overflow $end
   $var wire  4 % res [3:0] $end
   $var wire  4 % sub [3:0] $end
   $var wire  1 # zero_add $end
   $var wire  1 $ zero_res $end
   $var wire  1 $ zero_sub $end
   $scope module u_add $end
    $var wire  4 ' A [3:0] $end
    $var wire  4 ( B [3:0] $end
    $var wire  1 , carry $end
    $var wire  1 0 op $end
    $var wire  1 + overflow $end
    $var wire  4 & result [3:0] $end
    $var wire  4 ( t_add_op [3:0] $end
    $var wire  1 # zero $end
   $upscope $end
   $scope module u_res $end
    $var wire  4 ' A [3:0] $end
    $var wire  4 ( B [3:0] $end
    $var wire  1 . carry $end
    $var wire  1 1 op $end
    $var wire  1 - overflow $end
    $var wire  4 % result [3:0] $end
    $var wire  4 / t_add_op [3:0] $end
    $var wire  1 $ zero $end
   $upscope $end
   $scope module u_sub $end
    $var wire  4 ' A [3:0] $end
    $var wire  4 ( B [3:0] $end
    $var wire  1 . carry $end
    $var wire  1 1 op $end
    $var wire  1 - overflow $end
    $var wire  4 % result [3:0] $end
    $var wire  4 / t_add_op [3:0] $end
    $var wire  1 $ zero $end
   $upscope $end
  $upscope $end
 $upscope $end
$enddefinitions $end


#1
0#
0$
b1111 %
b1111 &
b0111 '
b1000 (
b000 )
b1111 *
0+
0,
1-
0.
b0111 /
00
11
#2
b001 )
#3
b010 )
b1000 *
#4
b011 )
b0000 *
#5
b100 )
b1111 *
#6
b101 )
#7
b110 )
b0001 *
#8
b111 )
b0000 *
#9
